require('dotenv').config();
const { Telegraf } = require('telegraf');
const express = require('express');
const fs = require('fs').promises; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–º–∏—Å—ã –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è
const path = require('path');
const schedule = require('node-schedule');

const BOT_TOKEN = process.env.BOT_TOKEN || throwError('BOT_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env');
const GROUP_ID = process.env.GROUP_ID || '-1002281200730';
const PORT = process.env.PORT || 5000;
const TIMEZONE = 'Asia/Almaty';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
const WELCOME_MESSAGE = `
–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º –≤–∞ —Ä–∞—Ö–º–∞—Ç—É–ª–∞—Ö–∏ –≤–∞ –±–∞—Ä–∞–∫–∞—Ç—É—Ö! 

–Ø –ë–∞—Å–∏—Ä ‚Äî –≤–∞—à —Å–ø—É—Ç–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ –¥—É—Ö–æ–≤–Ω–æ–º—É —Å–≤–µ—Ç—É.
–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00 –∏ 18:00 —è –±—É–¥—É –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –≤–∞–º –∞—è—Ç—ã –∏–∑ –°–≤—è—â–µ–Ω–Ω–æ–≥–æ –ö–æ—Ä–∞–Ω–∞.
`;

const bot = new Telegraf(BOT_TOKEN);
const app = express();

// –£ Asc–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞—è—Ç–∞
async function getRandomAyat() {
    try {
        const data = await fs.readFile(path.join(__dirname, 'ayats.json'), 'utf-8');
        const ayats = JSON.parse(data);
        return ayats[Math.floor(Math.random() * ayats.length)];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ ayats.json:', error.message);
        return { reference: '–û—à–∏–±–∫–∞', text: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—è—Ç' };
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∞—è—Ç–æ–º
function formatAyatMessage(ayat) {
    const today = new Date().toLocaleDateString('ru-RU', { timeZone: TIMEZONE });
    return `üìÖ *${today}*\nüìñ *${ayat.reference}*\n\n_${ayat.text}_`;
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => ctx.reply(WELCOME_MESSAGE.trim()));

// –ö–æ–º–∞–Ω–¥–∞ /ayat
bot.command('ayat', async (ctx) => {
    const ayat = await getRandomAyat();
    await ctx.reply(formatAyatMessage(ayat), { parse_mode: 'Markdown' });
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∞—è—Ç–∞
async function sendDailyAyat() {
    const ayat = await getRandomAyat();
    try {
        await bot.telegram.sendMessage(GROUP_ID, formatAyatMessage(ayat), { parse_mode: 'Markdown' });
        console.log(`–ê—è—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É ${GROUP_ID}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—è—Ç–∞:', error.message);
    }
}

// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á
function scheduleAyatNotifications() {
    const times = [
        { hour: 12, minute: 0 },
        { hour: 18, minute: 0 },
    ];

    times.forEach(({ hour, minute }) => {
        schedule.scheduleJob({ hour, minute, tz: TIMEZONE }, sendDailyAyat);
        console.log(`–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞—è—Ç–∞ –Ω–∞ ${hour}:${minute} (${TIMEZONE})`);
    });
}

// Express —Å–µ—Ä–≤–µ—Ä
app.get('/', (req, res) => res.send('–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!'));

// –ó–∞–ø—É—Å–∫
async function start() {
    try {
        app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
        await bot.launch();
        console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
        scheduleAyatNotifications();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error.message);
    }
}

// Graceful shutdown
function shutdown(signal) {
    console.log(`${signal} –ø–æ–ª—É—á–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...`);
    schedule.gracefulShutdown()
        .then(() => bot.stop(signal))
        .then(() => process.exit(0));
}

process.once('SIGINT', () => shutdown('SIGINT'));
process.once('SIGTERM', () => shutdown('SIGTERM'));

start();

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
function throwError(message) {
    throw new Error(message);
}